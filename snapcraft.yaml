name: peek
version: 'git'
icon: data/icons/512x512/com.uploadedlobster.peek.png
summary: Simple screen recorder with an easy to use interface
description: |
  Peek makes it easy to create short screencasts of a screen area. It was built
  for the specific use case of recording screen areas, e.g. for easily showing
  UI features of your own apps or for showing a bug in bug reports. With Peek
  you simply place the Peek window over the area you want to record and press
  "Record". Peek is optimized for generating animated GIFs, but you can also
  directly record to WebM or MP4 if you prefer.
grade: stable
confinement: strict

apps:
  peek:
    command: desktop-launch launch-peek
    desktop: share/applications/com.uploadedlobster.peek.desktop
    plugs:
      - desktop
      - gnome-3-26-1604
      - gsettings
      - home
      - unity7
      - wayland
      - x11
  ffmpeg:
    command: ffmpeg
  # gifski:
  #   command: gifski

plugs:
  gnome-3-26-1604:
    interface: content
    content: gnome-3-26-1604
    default-provider: gnome-3-26-1604
    target: gnome-platform

slots:
  session-dbus-interface:
    interface: dbus
    name: com.uploadedlobster.peek
    bus: session

parts:
  peek:
    plugin: cmake
    configflags:
      - -DGSETTINGS_COMPILE=OFF
      - -DCMAKE_BUILD_TYPE=Release
      - -DDISABLE_GNOME_SHELL=ON
      - -DDISABLE_OPEN_FILE_MANAGER=ON
    source: .
    # source: /media/sf_devel/peek
    source-type: git
    after:
      - desktop-gnome-platform
    build-packages:
      - libgtk-3-dev
      - libkeybinder-3.0-dev
      - gettext
      - valac
    stage-packages:
      - libcanberra-gtk3-module
      - libkeybinder-3.0-0
    install: |
      cp data/extra/com.canonical.Unity.gschema.xml $SNAPCRAFT_PART_INSTALL/share/glib-2.0/schemas
      glib-compile-schemas $SNAPCRAFT_PART_INSTALL/share/glib-2.0/schemas
    prime:
      - -usr/lib/pkgconfig
      - -usr/lib/*-linux-*/dri
      - -usr/lib/*-linux-*/libasound*
      - -usr/lib/*-linux-*/libgnutls*
      - -usr/lib/*-linux-*/libicu*
      - -usr/lib/*-linux-*/libLLVM*
      - -usr/lib/*-linux-*/libX11*
      - -usr/share/alsa
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/fonts
      - -usr/share/icons
      - -usr/share/man
      - -usr/share/mime
      - -usr/share/libthai
      - -usr/share/lintian
      - -usr/share/pkgconfig
      - -usr/share/sounds
      - -usr/share/X11

  launcher:
    plugin: dump
    source: data/snapcraft/
    organize:
      launch-peek: bin/launch-peek
    install: |
      chmod 0755 $SNAPCRAFT_PART_INSTALL/launch-peek

  # snapd-xdg-open:
  #   plugin: dump
  #   source: https://github.com/ubuntu-core/snapd-xdg-open.git
  #   organize:
  #     data/xdg-open: bin/xdg-open
  #   stage-packages:
  #     - dbus

  ffmpeg:
    plugin: autotools
    source: https://ffmpeg.org/releases/ffmpeg-3.4.1.tar.xz
    configflags:
      - --prefix=/usr
      - --disable-debug
      - --disable-static
      - --enable-gpl
      - --enable-libvpx
      - --enable-libx264
      - --enable-shared
      - --enable-libxcb
      - --enable-libxcb-xfixes
      - --disable-libxcb-shape
      - --disable-ffplay
      - --disable-ffprobe
      - --disable-ffserver
      - --disable-doc
      - --disable-everything
      - --enable-decoder=libvpx_vp8
      - --enable-decoder=h264
      - --enable-decoder=png
      - --enable-decoder=rawvideo
      - --enable-encoder=apng
      - --enable-encoder=ffvhuff
      - --enable-encoder=gif
      - --enable-encoder=libvpx_vp8
      - --enable-encoder=libx264
      - --enable-encoder=libx264rgb
      - --enable-encoder=png
      - --enable-demuxer=image2
      - --enable-demuxer=matroska
      - --enable-muxer=apng
      - --enable-muxer=gif
      - --enable-muxer=image2
      - --enable-muxer=matroska
      - --enable-muxer=mp4
      - --enable-muxer=webm
      - --enable-filter=crop
      - --enable-filter=fps
      - --enable-filter=palettegen
      - --enable-filter=paletteuse
      - --enable-filter=scale
      - --enable-protocol=file
      - --enable-indev=xcbgrab
    build-packages:
      - libx264-dev
      - libvpx-dev
      - yasm
    stage-packages:
      - libx264-148
      - libvpx3
    prime:
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/applications
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/fonts
      - -usr/share/ffmpeg/examples
      - -usr/share/icons
      - -usr/share/locale
      - -usr/share/man

  gifski:
    plugin: rust
    source: https://github.com/ImageOptim/gifski.git
    source-tag: 0.7.3
    rust-channel: stable
    # rust-features: [openmp]
    build: |
      if [ `arch` = "x86_64" ] || [ `arch` = "i686" ]
      then
        export RUST_PATH=../rust
        export RUSTC=${RUST_PATH}/bin/rustc
        export RUSTDOC=${RUST_PATH}/bin/rustdoc
        ${RUST_PATH}/bin/cargo install -j$(nproc --all) --features=openmp --root "${SNAPCRAFT_PART_INSTALL}" --path .
      else
        echo "Not building gifksi on $(arch)"
      fi
